GIT - Learning

    Git se divide en tres √°reas principales:
        √Årbol de Trabajo (Working directory): 
            Es el directorio donde se encuentran los archivos del proyecto y donde se realizan los cambios
        √Årea de Preparaci√≥n (Staginig area):
            Es una zona intermedia donde se guardan los archivos que se han modificado y que se quieren incluir en el siguiente commit
        Repositorio Local (Local repository):
            Es la base de datos donde se guardan las versiones anteriores de los archivos y donde se almacenan los commits
    
    Comandos de Git

        # ‚ùáÔ∏è Inicializaci√≥n
            git init                        # Inicializa un nuevo repositorio Git
            git clone <repo-url>            # Clona un repositorio desde una url

        # üõ†Ô∏è Uso diario
            git status                      # Muestra el estado de los cambios
            git add <archivo>               # Agrega los cambios al √°rea de preparaci√≥n 
            git rm --cached <archivo>       # Eliminar archivo del √°rea de preparaci√≥n
            git commit -m "Mensaje" -a      # Confirma los cambios y los sube al Repositorio
            git commit -a                   # Realizar cambios de forma directa sin necesidad de usar "add"
        
        # üå≥ Manejo de Ramas
            git branch                      # Listar Ramas
            git branch <nombre-rama>        # Crear rama 
            git switch <nombre-rama>        # Mover a rama
            git branch -d <nombre-rama>     # Eliminar rama
        
        # ü§ù Integraci√≥n y colaboraci√≥n
            git merge <nombre-rama>         # Fusiona la rama
            git remote add <nombre> <url>   # A√±ade un repositorio remoto 
            git push <remoto> <rama>        # Env√≠a los cambios a un repositorio remoto
            git pull <remoto> <rama>        # Obtiene los cambios de un repositorio remoto
        
        # ‚è™ Recuperaci√≥n y Limpieza       
            git checkout                    # Vuelve al ultimo commit realizado (Antes del √°rea de Staginig)    
            git fetch                       # Recupera los cambios sin fusionar
            git reset --hard HEAD           # Desecha todos los cambios locales
            git revert <hash-commit>        # Revierte los cambios de un commit

        # üßëüèΩ‚Äçüíª Avanzados y √ötiles
            git diff <a> <b>                # Compara dos commits, ramas o archivos
            git show <hash>                 # Muestra detalles de un commit
            git stash                       # Guarda cambios temporales y limpia el Working Tree 
            git stash pop                   # Recupera los cambios guardados del stash 
            git cherry-pick <hash>          # Aplica un commit especifico en la rama actual
            git rebase <base>               # Reaplica commits sobre otra base

    Comandos Basicos

        mkdir <carpeta>                     # Crear una carpeta
        rmdir <carpeta>                     # Eliminar una carpeta
        cd <carpeta>                        # Moverte hacia una carpeta
        ls                                  # Listar archivos
        rm                                  # Eliminar archivo
        clear                               # Limpiar terminal

AGUANTE MIDU.